#!/bin/sh
#
# $Id$
#

# Print an informational message
info() {
	echo "mkpkgng: $@"
}

# Print an error message and exit
error() {
	echo "mkpkgng: $@" 1>&2
	exit 1
}

# Ask a yes / no question
yesno() {
        while :; do
                echo -n "mkpkgng: $@ (yes/no) "
                read answer
                case $answer in
                [Yy]|[Yy][Ee][Ss])
                        return 0
                        ;;
                [Nn]|[Nn][Oo])
                        return 1
                        ;;
                esac
        done
}

#
# Locate source and build directory
#
srcdir="@abs_top_srcdir@"
[ -f "$srcdir/include/security/openpam.h" ] || \
    error "Unable to locate source directory."
builddir="@abs_top_builddir@"
cd "$srcdir"

#
# Determine pkgng version and ABI
#
pkgver=$(pkg query %v pkg)
[ -n "$pkgver" ] || error "Unable to determine pkgng version."
pkgabi=$(pkg -vv | awk '$1 == "ABI:" { print $2 }')
[ -n "$pkgabi" ] || error "Unable to determine package ABI."

#
# Determine package name and version
#
package="@PACKAGE@"
version="@PACKAGE_VERSION@"
if [ "$version" = "trunk" ] ; then
	svnversion="$(svnversion 2>&1)"
	svnversion=$(expr "$svnversion" : '\([0-9][0-9]*\)[A-Z]\{0,1\}$')
	if [ -n "$svnversion" ] ; then
		version="$version-r${svnversion}"
	fi
fi

#
# Locate GNU make
#
if which gmake >/dev/null ; then
	make=gmake
else
	make=make
fi
make="$make --no-print-directory --quiet V=0"

#
# Create temporary directory
#
info "Creating temporary directory."
tmproot=$(mktemp -d "${TMPDIR:-/tmp}/$package-$version.XXXXXX")
[ -n "$tmproot" -a -d "$tmproot" ] || error "unable to create temporary directory"
trap "info Deleting temporary directory. ; rm -rf '$tmproot'" EXIT
set -e

#
# Install into tmproot
#
info "Installing into temporary directory."
$make install DESTDIR="$tmproot"

#
# Generate stub manifest
#
info "Generating stub manifest."
manifest="$tmproot/+MANIFEST"
cat >"$manifest" <<EOF
name: $package
version: $version
origin: local/openpam
comment: BSD-licensed PAM implementation
arch: $pkgabi
www: @PACKAGE_URL@
maintainer: @PACKAGE_BUGREPORT@
prefix: @prefix@
desc:
  OpenPAM is an open source PAM library that focuses on simplicity,
  correctness, and cleanliness.
  
  OpenPAM aims to gather the best features of Solaris PAM, XSSO and
  Linux-PAM, plus some innovations of its own.  In areas where these
  implementations disagree, OpenPAM tries to remain compatible with
  Solaris, at the expense of XSSO conformance and Linux-PAM
  compatibility.
categories: local, security
EOF

# Generate file list
info "Generating file list."
(
	echo "files:"
	find "$tmproot" -type f | while read file ; do
		[ "$file" = "$manifest" ] && continue
		mode=$(stat -f%p "$file" | cut -c 3-)
		file="${file#$tmproot}"
		echo "  $file: { uname: root, gname: wheel, perm: $mode }"
	done
)>>"$manifest"

# As of pkg 1.1.4, the shlib detection logic in "pkg create" only
# works when tmproot == "/", so instead of creating a package directly
# from the contents of $tmproot, we have to install to / and package
# that.
info "Packaging."
if [ "$pkgver" \< "1.1.5" ] ; then
	info "pkg 1.1.4 or older detected."
	yesno "We must now install to /.  Proceed?" || error "Chicken."
	$make install
	pkg create -m "$tmproot" -o "$builddir"
else
	pkg create -r "$tmproot" -m "$tmproot" -o "$builddir"
fi

echo "Package created for $package-$version."
